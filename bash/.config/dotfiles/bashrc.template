# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Load the system bashrc
if [[ -f /etc/bashrc ]]; then . /etc/bashrc; fi


# -----------------------------------------------------------------------------


# Apps
alias bb='bbedit'
%% alias_rmate
alias safari='open -a Safari'
alias typora='open -a typora'
# Docker
alias dcu='docker-compose up -d'
alias dip='docker inspect --format "{{ .NetworkSettings.IPAddress }}"'
alias dps='docker ps'
# Networking
alias digg='dig +noall +answer'
alias pingg='ping -c 4'
alias pubip='dig +short myip.opendns.com @resolver1.opendns.com'
# Python
%% alias_anaconda
# System
alias powerline-restart='powerline-daemon --replace'
alias tag='dmidecode -s system-serial-number'
# Terminal
%% alias_ncdu
%% alias_pydf
alias groot='cd $(git rev-parse --show-toplevel)'
alias ll='ls -lAhFG --color=auto'
alias mkdir='mkdir -pv'
alias ps='ps auxf'
alias psg='ps aux | grep -v grep | grep -i -e'
alias sane='stty sane'
alias t='tree'
alias wget='wget -c'
# Tmux
alias tat='tmux attach -t'
alias tka='tmux kill-server'
alias tks='tmux kill-session'
alias tls='tmux list-sessions'
# ESAI
alias orch='javaws ~/.local/java/orchestrator.jnlp'


# -----------------------------------------------------------------------------


%% eval_thefuck
%% eval_keychain
%%

# Bash tab-completion settings
bind "set completion-ignore-case on"
bind "set completion-map-case on"
bind "set show-all-if-ambiguous on"
bind "set mark-symlinked-directories on"

# Bash history settings
shopt -s histappend
export HH_CONFIG=hicolor
export HISTFILESIZE=
export HISTSIZE=
export HISTCONTROL="erasedups:ignoreboth:ignorespace"
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history:clear"
export HISTTIMEFORMAT='%F %T '

# hstr bindings
# https://github.com/dvorka/hstr/blob/master/CONFIGURATION.md
if [[ $- =~ .*i.* ]]; then
  bind '"\C-r": "\C-a hh -- \C-j"'
  bind '"\C-xk": "\C-a hh -k \C-j"'
fi

# Bash output settings
export PAGER=most
export PROMPT_DIRTRIM=3
%% export_termopts
%%

%% source_rvm
%%

# -----------------------------------------------------------------------------


function .. () {
  local arg=${1:-1};
  local dir=""
  while [ $arg -gt 0 ]; do
    dir="../$dir"
    arg=$(($arg - 1));
  done
  cd $dir >&/dev/null
}

function decrypt () {
  filename=(${1//./ })
  openssl enc -d -aes-256-cbc -in $1 -out $filename.txt
}

function encrypt () {
  filename=(${1//./ })
  openssl enc -aes-256-cbc -salt -in $1 -out $filename.enc
}


# -----------------------------------------------------------------------------


%% ps1_select
