#!/bin/bash

# Black formatter for Python
blackdiff() { black --line-length 79 --diff "$@" | diff-so-fancy ; }

# Quick and dirty docker-compose linter
clint() { docker-compose -f "$1" config --quiet ; }

# Decrypt a file using openssl
decrypt() { openssl enc -d -aes-256-cbc -in "$1" -out "$1.decrypted" ; }

# Encrypt a file using openssl
encrypt() { openssl enc -aes-256-cbc -salt -in "$1" -out "$1.encrypted" ; }

# Show website http headers; follow redirects
httptrace() { curl -s -L -D - "$1" -o /dev/null -w "%{url_effective}\n" ; }

# Make and change into a new directory
mkcd() { mkdir -p "$1" ; cd "$1" || exit ; }

# Update user Python packages
pup() { pip_upgrade_outdated -3 --user --verbose ; }

# Run all three Python linters at once
pylinter() {
  black --line-length 79 --diff "$@" | diff-so-fancy
  pylint "$@"
  pycodestyle "$@"
}

# Generate a SSH key programmatically
sshgen() {
  local comment password keyfile
  comment="$(id -un)@$(uname -n) on $(date --iso-8601=minute)"
  password="$(keepassxc-cli diceware --words 5 | tr ' ' '-')"
  keyfile="$HOME"/.ssh/id_"${1:-rsa}"
  [[ -e "$keyfile" ]] && keyfile="$HOME"/.ssh/id_"$(date +%s)"
  ssh-keygen -q \
    -t rsa \
    -b 4096 \
    -N "$password" \
    -C "$comment" \
    -f "$keyfile"
  echo "$keyfile : $password"
}

# Update HomeBrew packages and casks
steep() { brew update ; brew upgrade ; brew cask upgrade ; brew cleanup ; }

# tar and gzip a given directory
tardir() { tar -czf "${1%/}".tar.gz "$1" ; }

# View cheat sheet for commands
cheat() { curl -s "cheat.sh/$1?style=vs" ; }

# Download a streaming video
ytdl-video() {
  youtube-dl \
    --format "bestvideo+bestaudio[ext=m4a]/bestvideo+bestaudio/best" \
    --merge-output-format mp4 \
    -o "%(title)s.%(ext)s"
}