#!/bin/bash

__prompt_command() {
  local ret=$? cwd="" host="" pyenv="" suffix \
       reset="\[\e[0;0m\]"
        bold="\[\e[1m\]" \
        blue="\[\e[38;5;33m\]" \
        cyan="\[\e[38;5;37m\]" \
       green="\[\e[38;5;64m\]" \
     magenta="\[\e[38;5;125m\]" \
         red="\[\e[38;5;160m\]" \
      orange="\[\e[38;5;166m\]"

  # use shorter CWD if tmux is active
  [[ -n "$TMUX" ]] && export PROMPT_DIRTRIM=1
  [[ -z "$TMUX" ]] && export PROMPT_DIRTRIM=5

  # set cwd style
  cwd="${blue}\w${reset}"

  # show hostname only if remote session w/o tmux
  [[ -n "$SSH_CONNECTION" && -z "$TMUX" ]] && host="${orange}\h${reset}:"

  # show anaconda _or_ virtualenv if activated
  [[ -n $VIRTUAL_ENV ]] && pyenv=" (${cyan}$(basename "$VIRTUAL_ENV")${reset})"
  [[ -n $CONDA_DEFAULT_ENV ]] && pyenv=" (${cyan}${CONDA_DEFAULT_ENV}${reset})"

  # colorize suffix based on return value
  case "$ret" in
    0) suffix="${bold}${green} > ${reset}"   ;;
    1) suffix="${bold}${red} > ${reset}"     ;;
    *) suffix="${bold}${magenta} > ${reset}" ;;
  esac

  # use git-prompt if available to build ps1
  if type __git_ps1 &>/dev/null; then
    GIT_PS1_SHOWDIRTYSTATE=true
    GIT_PS1_SHOWSTASHSTATE=true
    GIT_PS1_SHOWUNTRACKEDFILES=true
    GIT_PS1_SHOWCOLORHINTS=true
    GIT_PS1_SHOWUPSTREAM="auto verbose"
    __git_ps1 "[${cwd}${host}]" "${pyenv}${suffix}"
  else
    PS1="[${cwd}${host}]${pyenv}${suffix}"
  fi
}

# source git-prompt if necessary
if [[ -e "/usr/share/git-core/contrib/completion/git-prompt.sh" ]]; then
  . "/usr/share/git-core/contrib/completion/git-prompt.sh"
fi

PROMPT_COMMAND='__prompt_command; history -a'