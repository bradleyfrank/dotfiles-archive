#!/usr/bin/env python3

__author__ = "Bradley Frank"

import argparse
import json
import os
import re
import sys
import urllib.request
import zipfile
from subprocess import check_output

GNOME_URL = "https://extensions.gnome.org"
EXTENSION_DIR = os.path.expanduser("~") + "/.local/share/gnome-shell/extensions"


def get_extension_download_url(extension_id, system_gnome_version):
    url = (
        GNOME_URL + "/extension-info/?pk=" + extension_id
        + "&shell_version=" + system_gnome_version
    )

    response = urllib.request.urlopen(url)
    data = response.readline().decode("utf-8")
    metadata = json.loads(data)

    if system_gnome_version not in metadata["shell_version_map"]:
        print("[ERROR] No supported version found.")
        return False

    return (metadata["download_url"], metadata["uuid"])


def download_extension(metadata):
    download_url = GNOME_URL + metadata[0]
    install_location = EXTENSION_DIR + "/" + metadata[1]

    fp, _ = urllib.request.urlretrieve(download_url)

    extension_zipfile = zipfile.ZipFile(fp)
    extension_zipfile.extractall(install_location)

    urllib.request.urlcleanup()


def main():
    parser = argparse.ArgumentParser(description="Install a Gnome extension.")
    parser.add_argument(
        "-x", "--extension", type=str, help="The extension ID number to install.",
    )
    args = parser.parse_args()

    gnome_shell_version = re.search(
        r"([0-9]+\.[0-9]+)",
        check_output(["gnome-shell", "--version"]).decode("utf-8"),
    ).group(1)

    extension_metadata = get_extension_download_url(
        args.extension,
        gnome_shell_version
    )

    if not extension_metadata:
        sys.exit()

    download_extension(extension_metadata)


if __name__ == "__main__":
    main()
