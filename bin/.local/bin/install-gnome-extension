#!/usr/bin/env python3

__author__ = "Bradley Frank"

import argparse
import io
import json
import os
import re
import requests
import sys
import urllib.request
import zipfile
from subprocess import check_output
from urllib.error import HTTPError
from urllib.error import URLError

GNOME_URL = "https://extensions.gnome.org"
INSTALL_LOC = os.path.expanduser("~") + "/.local/share/gnome-shell/extensions"


def get_extension_download_url(extension_id, system_gnome_version):
    url = (
        GNOME_URL + "/extension-info"
        + "/?pk=" + extension_id
        + "&shell_version=" + system_gnome_version
    )

    try:
        response = urllib.request.urlopen(url)
    except HTTPError as e:
        print("[ERROR] Could not download metadata.")
        return False
    except URLError as e:
        print("[ERROR] Could not download metadata.")
        return False

    data = response.readline().decode("utf-8")
    metadata = json.loads(data)

    if "download_url" not in metadata or "uuid" not in metadata:
        print("[ERROR] Could not find extenstion metadata.")
        return False

    if system_gnome_version not in metadata["shell_version_map"]:
        print("[ERROR] No supported version found.")
        return False

    return (metadata["download_url"], metadata["uuid"])


def download_extension(metadata):
    download_url = metadata[0]
    extension_uuid = metadata[1]

    r = requests.get(GNOME_URL + download_url)
    extension_zipfile = zipfile.ZipFile(io.BytesIO(r.content))
    extension_zipfile.extractall(INSTALL_LOC + "/" + extension_uuid)


parser = argparse.ArgumentParser(
    description="Download and install Gnome extensions."
)
parser.add_argument(
    "-x", "--extension", type=str, help="The extension ID number to install.",
)
args = parser.parse_args()

system_gnome_version = re.search(
    r"([0-9]+\.[0-9]+)",
    check_output(["gnome-shell", "--version"]).decode("utf-8"),
).group(1)

metadata = get_extension_download_url(args.extension, system_gnome_version)

if not metadata:
    sys.exit()

download_extension(metadata)
